@{
    var user = await UserManager.GetUserAsync(User);
    var watchlistCount = 0;

    if (user != null)
    {
        watchlistCount = await WatchlistService.GetWatchlistCountAsync(user.Id);
    }
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Netolex</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link rel="stylesheet" href="~/css/layout.css">

</head>

<body style="    background-color: black;">
    <nav class="nav-bar">
        <div class="nav-content">
            <div class="logo">
                <i class="fas fa-film"></i>
                Netolex
            </div>
            <button class="mobile-menu-btn">
                <i class="fas fa-bars"></i>
            </button>
            <ul class="nav-link">
                <li><a class="active" asp-controller="home" asp-action="index" >Movies</a></li>
                <li class="dropdown">
                    <a href="#" class="dropdown-toggle">  Admin Panal <i class="fas fa-chevron-down"></i></a>
                    <ul class="dropdown-nav-link">
                        <li><a href="/Admin/Index/">Movie Management</a></li>
                        <li><a href="/Genre/index/">Genre Management</a></li>
                        <li><a href="/Director/index/">Director Management</a></li>
                        <li><a href="/Actor/index/">Actor Management</a></li>
                        <li><a href="/Review/index/">Review Management</a></li>
                    </ul>
                </li>
                <!-- Then use it in your navigation -->
                <li>
                    <a asp-controller="WatchList" asp-action="Index"
                       class="@(ViewContext.RouteData.Values["Action"].ToString() == "WatchList" ? "active" : "")">
                        WatchList @if (watchlistCount > 0)
                        {
                            <span class="watchlist-badge">@watchlistCount</span>
                        }
                    </a>
                </li>
                <li>
                <a asp-controller="account" asp-action="SignOut" class="logout-btn">
                        <i class="fas fa-sign-out-alt"></i> Logout
                    </a>
                </li>
            </ul>
        </div>
    </nav>

    <main>
        @RenderBody()
    </main>

    <footer class="main-footer">
        <div class="footer-content">
            <div class="footer-links">
                <ul>
                    <li><a href="/about">About Us</a></li>
                    <li><a href="/contact">Contact</a></li>
                    <li><a href="/privacy">Privacy Policy</a></li>
                    <li><a href="/terms">Terms of Service</a></li>
                </ul>
            </div> 
            @RenderSection("Scripts", required: false)
            <div class="copyright">
                <p>&copy; @DateTime.Now.Year MovieVerse. All rights reserved.</p>
            </div>
        </div>
    </footer>
    </div>

</body>
</html>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        // تفعيل زر القائمة في الأجهزة المحمولة
        const mobileMenuBtn = document.querySelector('.mobile-menu-btn');
        const navLinks = document.querySelector('.nav-link');

        if (mobileMenuBtn && navLinks) {
            mobileMenuBtn.addEventListener('click', function () {
                navLinks.classList.toggle('active');
            });
        }

        // تفعيل القوائم المنسدلة في الأجهزة المحمولة
        const dropdowns = document.querySelectorAll('.dropdown');

        dropdowns.forEach(dropdown => {
            const dropdownToggle = dropdown.querySelector('.dropdown-toggle');

            if (dropdownToggle && window.innerWidth < 768) {
                dropdownToggle.addEventListener('click', function (e) {
                    e.preventDefault();
                    dropdown.classList.toggle('active');
                });
            }
        });

        // إغلاق القائمة عند النقر خارجها
        document.addEventListener('click', function (e) {
            if (!e.target.closest('.nav-content') && navLinks.classList.contains('active')) {
                navLinks.classList.remove('active');
            }
        });

        // إعادة تعيين حالة القائمة عند تغيير حجم النافذة
        window.addEventListener('resize', function () {
            if (window.innerWidth > 768 && navLinks.classList.contains('active')) {
                navLinks.classList.remove('active');

                dropdowns.forEach(dropdown => {
                    dropdown.classList.remove('active');
                });
            }
        });
    });
</script>